task.wait(3)
getgenv().mouse1click = function(p2, p3)
    local A = game:GetService("UserInputService"):GetMouseLocation()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(p2 or A.X, p3 or A.Y, 0, true, nil, 0)
    task.wait()
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(p2 or A.X, p3 or A.Y, 0, false, nil, 0)
end

getgenv().keypress = function(p1, p2)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, p1, false, nil)
    task.wait()
    game:GetService("VirtualInputManager"):SendKeyEvent(false, p1, false, nil)
end

repeat task.wait() until game:IsLoaded()

pcall(function()
    getconnections(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Frame.Bar.Play.MouseButton1Down)[1]:Fire()
end)

keypress("E")
local foldercount = 0;
for i, v in pairs(workspace:GetChildren()) do
    if v.Name == "Folder" then
        foldercount = foldercount + 1
        if foldercount == 2 then
            v:Destroy()
        end
    end
end

for i, v in workspace.Enemies:GetChildren() do
    if v:FindFirstChild("ExtraHitbox") then
        v.ExtraHitbox.Size = Vector3.new(1000, 1000, 1000)
        v.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
    end
    if v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid"):FindFirstChild("Animator") then
        v.Humanoid.Animator:Destroy()
    end
end

workspace.Enemies.ChildAdded:Connect(function(v)
    if v:FindFirstChild("ExtraHitbox") then
        v.ExtraHitbox.Size = Vector3.new(10000, 10000, 10000)
        v.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
    end
    if v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid"):FindFirstChild("Animator") then
        v.Humanoid.Animator:Destroy()
    end
end)

for i, v in workspace.Folder:GetDescendants() do
    if v:IsA("TouchTransmitter") then
        -- only allows baseparts not the touchtransmitter itself smh
        firetouchinterest(v.Parent, game:GetService("Players").LocalPlayer.Character.PrimaryPart, 0)
    end
end

workspace.Folder.DescendantAdded:Connect(function(v)
    for i, v in workspace.Folder:GetDescendants() do
        if v:IsA("TouchTransmitter") then
            -- only allows baseparts not the touchtransmitter itself smh
            firetouchinterest(v.Parent, game:GetService("Players").LocalPlayer.Character.PrimaryPart, 0)
        end
    end
end)

task.spawn(function()
    while task.wait() do
        local playerGui = game:GetService("Players").LocalPlayer.PlayerGui
        local upgradeCards = playerGui.MainGui.UpgradeCards.Rush

        -- Ensure the cards are fully loaded before proceeding
        if #upgradeCards:GetChildren() > 1 then
            -- Increase the wait time to account for UI delays
            task.wait(1)

            for i, v in pairs(upgradeCards:GetChildren()) do
                if v.Name ~= "UIListLayout" and v.Name ~= "Minions" then
                    local targetCard = upgradeCards:FindFirstChild(v.Name)

                    if not targetCard then
                        warn('Card not found: ' .. v.Name)
                        continue
                    end

                    -- Attempt to purchase the upgrade, regardless of previous purchases
                    local purchaseButton = targetCard.Purchase.MouseButton1Down
                    local connections = getconnections(purchaseButton)

                    if connections and #connections > 0 then
                        for attempt = 1, 3 do
                            -- Fire all connections to ensure the purchase happens
                            for _, conn in pairs(connections) do
                                pcall(function()
                                    conn:Fire()
                                end)
                            end
                            task.wait(0.5) -- Wait between retries to ensure stability
                        end
                    else
                        warn('No connections found for purchase button: ' .. v.Name)
                    end
                end
            end
        end
    end
end)






task.spawn(function()
    while task.wait() do
        for i, v in pairs(workspace.Enemies:GetChildren()) do
            if v:FindFirstChild("HumanoidRootPart") then
                local tween;
                if v.Name == "Prince Pufu" or v.Name == "Chimera King" then
                    local info = TweenInfo.new(
                    (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position)
                    .Magnitude / 500, Enum.EasingStyle.Linear)
                    while v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid").Health > 0 do
                        tween = game:GetService("TweenService"):Create(
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, info,
                            { CFrame = CFrame.new(v.HumanoidRootPart.Position) })
                        tween:Play()
                        tween.Completed:Wait()
                        keypress("Three");
                        mouse1click(500, 500);
                        task.wait()
                    end
                else
                    local info = TweenInfo.new(
                    ((v.HumanoidRootPart.Position + Vector3.new(0, 20, 0)) - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position)
                    .Magnitude / 500, Enum.EasingStyle.Linear)
                    while v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid").Health > 0 do
                        tween = game:GetService("TweenService"):Create(
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, info,
                            { CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(0, 20, 0)) })
                        tween:Play()
                        tween.Completed:Wait()
                        mouse1click(500, 500)
                        task.wait()
                    end
                end
            else
                continue;
            end
        end
    end
end)
